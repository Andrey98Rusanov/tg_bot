from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import logging
import os

# üîê –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv('BOT_TOKEN')
CHANNEL_USERNAME = '@RusanovMentor'

if not API_TOKEN:
    raise ValueError("BOT_TOKEN environment variable is not set")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
main_keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    one_time_keyboard=False,  # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    input_field_placeholder="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"  # –°–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞
)
main_keyboard.add(KeyboardButton("üìñ –ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥"))

async def check_subscription_and_send_guide(message: types.Message):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–∞–π–¥–∞"""
    user_id = message.from_user.id
    try:
        member = await bot.get_chat_member(CHANNEL_USERNAME, user_id)
        if member.status in ['creator', 'administrator', 'member']:
            await message.answer(
                "‚úÖ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!\n\n"
                "üìö –í–∞—à –≥–∞–π–¥: https://teletype.in/@andrusanov/2PeMdy1IRJh",
                reply_markup=main_keyboard
            )
        else:
            raise Exception("Not subscribed")
    except:
        await message.answer(
            "‚ùå –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–∞–π–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª: https://t.me/RusanovMentor",
            reply_markup=main_keyboard
        )

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –≤–≤–µ–¥–∏ /start, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥\n"
        "–í–∞–∂–Ω–æ: —Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª üëâ https://t.me/RusanovMentor",
        reply_markup=main_keyboard
    )
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–∞–π–¥
    await check_subscription_and_send_guide(message)

@dp.message_handler(text="üìñ –ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥")
async def send_guide(message: types.Message):
    await check_subscription_and_send_guide(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler()
async def handle_other_messages(message: types.Message):
    await message.answer(
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–∞–π–¥–∞ üëá",
        reply_markup=main_keyboard
    )

if __name__ == '__main__':
    executor.start_polling(dp)
